{"version":3,"file":"__output.js","sources":["foo.ts","bar.spec.ts"],"sourcesContent":["export function foo (count) {\n  return count + 42\n}\n","import { foo } from './foo'\n\ndescribe('yet another ts test suite', () => {\n  it('tests the foo function again', () => {\n    expect(foo(42)).to.equal(84)\n  })\n\n  it('another meows', () => {\n    expect('meow').to.equal('meow')\n  })\n\n  it('this is a function spy', () => {\n    const spy = sinon.fake()\n    spy()\n    expect(spy.callCount).to.equal(1)\n  })\n})\n"],"names":[],"mappings":";;AAAO,SAAS,IAAK,KAAO,EAAA;AAC1B,EAAA,OAAO,KAAQ,GAAA,EAAA,CAAA;AACjB;;ACAA,QAAA,CAAS,6BAA6B,MAAM;AAC1C,EAAA,EAAA,CAAG,gCAAgC,MAAM;AACvC,IAAA,MAAA,CAAO,IAAI,EAAE,CAAC,CAAE,CAAA,EAAA,CAAG,MAAM,EAAE,CAAA,CAAA;AAAA,GAC5B,CAAA,CAAA;AAED,EAAA,EAAA,CAAG,iBAAiB,MAAM;AACxB,IAAA,MAAA,CAAO,MAAM,CAAA,CAAE,EAAG,CAAA,KAAA,CAAM,MAAM,CAAA,CAAA;AAAA,GAC/B,CAAA,CAAA;AAED,EAAA,EAAA,CAAG,0BAA0B,MAAM;AACjC,IAAM,MAAA,GAAA,GAAM,MAAM,IAAK,EAAA,CAAA;AACvB,IAAI,GAAA,EAAA,CAAA;AACJ,IAAA,MAAA,CAAO,GAAI,CAAA,SAAS,CAAE,CAAA,EAAA,CAAG,MAAM,CAAC,CAAA,CAAA;AAAA,GACjC,CAAA,CAAA;AACH,CAAC,CAAA;;"}